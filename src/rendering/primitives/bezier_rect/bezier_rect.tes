#version 410 core
uniform mat4 world_view;

in vec2 c0_cs[];
in vec2 c1_cs[];
in vec2 c2_cs[];
in float height_cs[];
in vec3 pos_cs[];
in vec4 color_cs[];

out vec4 color_es;

layout(quads, equal_spacing) in;

vec3 bezier_pos(vec2 uv, float width, vec2 c0, vec2 c1, vec2 c2, vec3 pos);

void main() {
  vec2 bezier_param = gl_TessCoord.xy;
  color_es = color_cs[0];
  gl_Position = vec4(bezier_pos(bezier_param, height_cs[0], c0_cs[0], c1_cs[0], c2_cs[0], pos_cs[0]), 1.0);
  gl_Position = world_view * gl_Position;
}

vec3 bezier_pos(vec2 uv, float height, vec2 c0, vec2 c1, vec2 c2, vec3 pos) {
  float t = uv.x;
  vec2 vert_dir = vec2(0.0, 1.0);
  vec2 bezier_line_pos =
    (1 - t) * (1 - t) * c0
    + 2 * t * (1 - t) * c1
    + t * t * c2;
  float vertical_pos = uv.y - 0.5;
  vec2 local_pos = bezier_line_pos + vertical_pos * height * vert_dir; 
  return vec3(local_pos.xy, 0.0) + pos;
}
