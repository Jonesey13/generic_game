#version 410 core

in vec2 c0_vs[];
in vec2 c1_vs[];
in vec2 c2_vs[];
in float branch_height_vs[];
in vec3 branch_pos_vs[];
in float width_vs[];
in float height_vs[];
in float branch_logical_length_vs[];
in float branch_logical_height_left_vs[];
in float branch_logical_height_right_vs[];
in vec3 logical_pos_vs[];
in vec4 color_vs[];

layout(vertices = 4) out;

out vec2 c0_cs[];
out vec2 c1_cs[];
out vec2 c2_cs[];
out float branch_height_cs[];
out vec3 branch_pos_cs[];
out float width_cs[];
out float height_cs[];
out float branch_logical_length_cs[];
out float branch_logical_height_left_cs[];
out float branch_logical_height_right_cs[];
out vec3 logical_pos_cs[];
out vec4 color_cs[];

uniform int tess_level_outer = 10;
uniform int tess_level_inner = 10;

void main() {
  c0_cs[gl_InvocationID] = c0_vs[0];
  c1_cs[gl_InvocationID] = c1_vs[0];
  c2_cs[gl_InvocationID] = c2_vs[0];
  branch_height_cs[gl_InvocationID] = branch_height_vs[0];
  branch_pos_cs[gl_InvocationID] = branch_pos_vs[0];
  width_cs[gl_InvocationID] = width_vs[0];
  height_cs[gl_InvocationID] = height_vs[0];
  branch_logical_length_cs[gl_InvocationID] = branch_logical_length_vs[0];
  branch_logical_height_left_cs[gl_InvocationID] = branch_logical_height_left_vs[0];
  branch_logical_height_right_cs[gl_InvocationID] = branch_logical_height_right_vs[0];
  logical_pos_cs[gl_InvocationID] = logical_pos_vs[0];
  color_cs[gl_InvocationID] = color_vs[0];
  gl_TessLevelOuter[0] = tess_level_outer;
  gl_TessLevelOuter[1] = tess_level_outer;
  gl_TessLevelOuter[2] = tess_level_outer;
  gl_TessLevelOuter[3] = tess_level_outer;
  gl_TessLevelInner[0] = tess_level_inner;
  gl_TessLevelInner[1] = tess_level_inner;
}
